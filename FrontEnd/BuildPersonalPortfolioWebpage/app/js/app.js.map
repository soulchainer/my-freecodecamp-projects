{"version":3,"sources":["app.js"],"names":["drawLogo","$paths","$","Vivus","type","duration","pathTimingFunction","LINEAR","animTimingFunction","addClass","ScrollManager","MenuMobile","this","menu","menuContainer","sectionLinks","body","Carousel","autoplay","controlBtn","panelWidth","clientWidth","panels","allPanelsWidth","swipeBtn","swipeStartPos","translatePanels","prototype","smoothScroll","time","obj","self","animate","e","to","smoothMap","get","target","id","offsetTop","from","window","scrollY","start","Date","getTime","timer","setInterval","step","Math","min","scrollTo","clearInterval","initSmoothScroll","selector","arguments","length","undefined","items","Map","toArray","map","el","attr","on","fireOnScroll","breakpoints","offset","scrollPos","pageY","currentTarget","pageYOffset","brks","keys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","node","value","err","initFireOnScroll","toggleFoldedMenu","folded","toggleClass","init","addSwipeListener","togglePlayMode","watchPanelWidth","panelsToTheRight","css","panelsToTheLeft","startSwipe","deltaX","endSwipe","document","getElementById","hammer","Hammer","Manager","carousel","add","Swipe","direction","DIRECTION_HORIZONTAL","threshold","alt","$this","off","updatePanelWidths","updateWidths","menuMobile","scroll","className","toggleOnlyListClass","nodeTarget","nodeList","hasClass","removeClass","breaks","set"],"mappings":"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","file":"app.js","sourcesContent":["(function(){\n\n  'use strict';\n\n  // «¡Hola!» svg drawing animation\n  function drawLogo() {\n    var $paths = $('#paths');\n    var greeting = new Vivus('greeting',  {\n      type: \"oneByOne\",\n      duration: 225,\n      pathTimingFunction: Vivus.LINEAR,\n      animTimingFunction: Vivus.LINEAR\n    }, function () {\n      $paths.addClass('drawn');\n    });\n  }\n\n  // All the scroll related functionality\n  function ScrollManager() {\n  }\n\n  ScrollManager.prototype.smoothScroll = function(time, obj) {\n    var self = obj;\n    var animate = function(e) {\n      // smooth scrolling from @rahul_send89 function\n      // http://stackoverflow.com/a/26094310/1405004\n      var to = self.smoothMap.get(e.target.id)[0].offsetTop;\n      var from = window.scrollY;\n      var start = new Date().getTime(),\n          timer = setInterval(function() {\n            var step = Math.min(1,(new Date().getTime()-start)/time);\n                window.scrollTo(0,(from+step*(to-from))+1);\n                if( step === 1){\n                  clearInterval(timer);\n                }\n          },25);\n          window.scrollTo(0,(from+1));\n    };\n    return animate;\n  };\n  // init smooth scroll from the elements matching selector to the elements\n  // specified in attribute data-to of that elements\n  ScrollManager.prototype.initSmoothScroll = function(selector, time=200) {\n    var self = this;\n    self.items = $(selector);\n    // Map of pairs «id» origin button → DOM element to scroll\n    self.smoothMap = new Map(self.items.toArray()\n    .map(el => [el.id, $('#' + $(el).attr('data-to'))]));\n\n    self.items.on('click', self.smoothScroll(time, self));\n  };\n  // Fire functions when scroll to the proper section\n  ScrollManager.prototype.fireOnScroll = function(e, breakpoints, offset) {\n    // breakpoints is a Map of node → function to execute when scroll near it\n    // nodes should be in order and should be the bottom bound who delimited\n    // the wanted area, nor the upper one: fireOnScroll executes a function\n    // when you get just before the breakpoint, not after\n    var scrollPos = (e.pageY)? e.pageY + offset: e.currentTarget.pageYOffset + offset;\n\n    var brks = breakpoints.keys();\n\n    for (let node of brks) {\n      if(scrollPos < node[0].offsetTop) {\n        breakpoints.get(node)();\n        break;\n      }\n    }\n  };\n\n  ScrollManager.prototype.initFireOnScroll = function(breakpoints, offset=100) {\n    let self = this;\n    $(window).on('scroll', ((e) => self.fireOnScroll(e, breakpoints, offset)));\n  };\n\n  // menu mobile\n  function MenuMobile() {\n    this.menu = $('#mobile-menu');\n    this.menuContainer = $('#navbar-mobile-menu-container');\n    this.sectionLinks = $('.nav-link');\n    this.body = $('body');\n  }\n  // fold/unfold the menu\n  MenuMobile.prototype.toggleFoldedMenu = function(obj) {\n    var self = obj;\n    var folded = self.menuContainer.attr('data-folded');\n\n    if (folded === 'true') {\n      self.menuContainer.attr('data-folded', 'false');\n    } else {\n      self.menuContainer.attr('data-folded', 'true');\n    }\n    self.body.toggleClass('noscroll');\n  };\n  MenuMobile.prototype.init = function() {\n    var self = this;\n    this.menu.on('click', (() => self.toggleFoldedMenu(self)));\n    this.sectionLinks.on('click', (() => self.toggleFoldedMenu(self)));\n  };\n\n  // carousel\n  function Carousel() {\n    this.autoplay = true;\n    this.controlBtn = $('#carousel-control-btn');\n    this.panelWidth = $('#projects-device')[0].clientWidth;\n    this.panels = $('#carousel');\n    this.allPanelsWidth = this.panels[0].clientWidth;\n    this.swipeBtn = $('#swipe');\n    this.swipeStartPos = null;\n    this.translatePanels = 0;\n  }\n\n  // start the carousel\n  Carousel.prototype.init = function() {\n    this.addSwipeListener();\n    this.togglePlayMode();\n    this.watchPanelWidth();\n  };\n\n  // carousel panel movement\n  Carousel.prototype.panelsToTheRight = function() {\n    if (this.translatePanels < 0) {\n      this.translatePanels += this.panelWidth;\n    } else {\n      this.translatePanels = -this.allPanelsWidth + this.panelWidth;\n    }\n    this.panels.css('transform', 'translateX(' + this.translatePanels + 'px)');\n  };\n  Carousel.prototype.panelsToTheLeft = function() {\n    if ((this.translatePanels <= 0) &&\n        (this.translatePanels > -this.allPanelsWidth + this.panelWidth)) {\n      this.translatePanels -= this.panelWidth;\n    } else {\n      this.translatePanels = 0;\n    }\n    this.panels.css('transform', 'translateX(' + this.translatePanels + 'px)');\n  };\n\n  // carousel desktop swipe control\n  Carousel.prototype.startSwipe = function(e) {\n    this.swipeStartPos = e.deltaX;\n  };\n  Carousel.prototype.endSwipe = function(e) {\n    if((this.swipeStartPos - e.deltaX) < 0) {\n      this.panelsToTheRight();\n    } else {\n      this.panelsToTheLeft();\n    }\n  };\n\n  // carousel touch control\n  Carousel.prototype.addSwipeListener = function() {\n    let panels = document.getElementById('carousel');\n    let hammer = new Hammer.Manager(panels);\n    let carousel = this;\n\n    hammer.add( new Hammer.Swipe({direction: Hammer.DIRECTION_HORIZONTAL, threshold: 10}));\n    hammer.on('swiperight', (()=>carousel.panelsToTheRight()));\n    hammer.on('swipeleft', (()=>carousel.panelsToTheLeft()));\n  };\n\n  // carousel control toggle\n  Carousel.prototype.togglePlayMode = function() {\n    let alt = null;\n    let carousel = this;\n\n    this.controlBtn.on('click', function(e, self=carousel) {\n      let $this = $(this);\n      self.autoplay = (self.autoplay)? false: true;\n      self.panels.toggleClass('carousel-animation');\n\n      if(self.autoplay) {\n        self.translatePanels = 0;\n        self.panels\n        .css('transform', 'translateX(' + self.translatePanels + 'px)');\n        alt = 'Stop';\n        self.panels.off('dragstart', self.startSwipe);\n        self.panels.off('dragend', self.endSwipe);\n      } else {\n        alt = 'Autoplay';\n        self.panels.on('dragstart', self.startSwipe);\n        self.panels.on('dragend', self.endSwipe);\n      }\n      $this.attr('alt', alt);\n      $this.toggleClass('icon-stop');\n      $this.toggleClass('icon-play');\n      self.swipeBtn.toggleClass('hide');\n      self.swipeBtn.toggleClass('swipe');\n    });\n  };\n\n  // get panel width after window resize\n  Carousel.prototype.watchPanelWidth = function() {\n    let self = this;\n    let updatePanelWidths = function(self) {\n      function updateWidths () {\n        self.panelWidth = $('#projects-device')[0].clientWidth;\n        self.allPanelsWidth = self.panels[0].clientWidth;\n      }\n      return updateWidths;\n    };\n    $(window).on('resize', updatePanelWidths(self));\n  };\n\n  // Main\n  {\n    // drawn the main logo\n    drawLogo();\n    // menu mobile functionality\n    var menuMobile = new MenuMobile();\n    menuMobile.init();\n\n    // scroll functionality\n    var scroll = new ScrollManager();\n    scroll.initSmoothScroll('.nav-link');\n\n    var className = 'current-section';\n    var sectionLinks =  $('.nav-link');\n\n    var toggleOnlyListClass = function(nodeTarget, nodeList, className) {\n    // remove «className» from other nodes of nodeList and add it to nodeTarget\n      if (!nodeTarget.hasClass(className)) {\n          nodeList.removeClass(className);\n          nodeTarget.addClass(className);\n        }\n    };\n    // breakpoints for execute actions according to scroll position\n    var breaks = new Map();\n    breaks.set($('#about'), (()=>toggleOnlyListClass($('#btn-home'), sectionLinks, className)));\n    breaks.set($('#skills'), (()=>toggleOnlyListClass($('#btn-about'), sectionLinks, className)));\n    breaks.set($('#projects'), function() {\n      toggleOnlyListClass($('#btn-skills'), sectionLinks, className);\n      $('.chart-bar').addClass('animate-bar');\n    });\n    breaks.set($('#contact'), (()=>toggleOnlyListClass($('#btn-projects'), sectionLinks, className)));\n    breaks.set($('#footer'), (()=>toggleOnlyListClass($('#btn-contact'), sectionLinks, className)));\n\n    scroll.initFireOnScroll(breaks);\n\n    // carousel functionality\n    var carousel = new Carousel();\n    carousel.init();\n\n    // add mail address\n    $('#mail').attr('href', 'mailto:juanriqgon@gmail.com');\n  }\n})();"],"sourceRoot":"/source/"}